class l{constructor(t,i,o=70,e,s){this._color="white",this.agent=null,this.i=e,this.j=s,this._x=t,this._y=i,this._size=o}get color(){return this._color}set color(t){this._color=t}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get size(){return this._size}set size(t){this._size=t}draw(t){t.fillStyle=this._color,t.fillRect(this._x,this._y,this._size,this._size),t.strokeStyle="rgba(0, 0, 0, 0.3)",t.strokeRect(this._x,this._y,this._size,this._size),t.font="bold 10px Arial",t.fillStyle="rgba(0, 0, 0, 0.9)",t.fillText(`${this._x},${this._y}`,this._x+2,this._y+16)}}class f extends l{constructor(t,i,o,e,s){super(t,i,o,e,s),this._itemsCount=1,this.agent="good"}get itemsCount(){return this._itemsCount}incrementItemsCount(){this._itemsCount++}decrementItemsCount(){this._itemsCount--}drawGood(t){t.beginPath(),t.fillStyle="green",t.arc(this.x+this.size/4,this.y+this.size/4,this.size/4,0,Math.PI*2),t.fill(),t.fillStyle="white",t.font=`${this.size/3}px Arial`,t.textAlign="center",t.textBaseline="middle",t.fillText(this._itemsCount.toString(),this.x+this.size/4,this.y+this.size/4)}}class u extends l{constructor(t,i,o,e,s,n){super(t,i,o,e,s),this._directionToQueen={x:0,y:0},this._distanceToQueen=0,this._directionToFood={x:0,y:0},this._foodSmellStrength=0,this._pheromoneLevel=0,this._hasPheromone=!1,this._stepsWithoutFood=0,this._maxStepsWithoutFood=0,this._maxStepsWithoutFood=n}get directionToQueen(){return this._directionToQueen}get distanceToQueen(){return this._distanceToQueen}get directionToFood(){return this._directionToFood}get foodSmellStrength(){return this._foodSmellStrength}get pheromoneLevel(){return this._pheromoneLevel}get hasPheromone(){return this._hasPheromone}updateFoodInfo(t,i,o){const e=t-this.x,s=i-this.y,n=Math.sqrt(e*e+s*s);n===0?(this._directionToFood={x:0,y:0},this._foodSmellStrength=1):(this._directionToFood={x:e/n,y:s/n},this._foodSmellStrength=Math.max(0,1-n/o))}updateQueenInfo(t,i){const o=t-this.x,e=i-this.y,s=Math.sqrt(o*o+e*e);s===0?(this._directionToQueen={x:0,y:0},this._distanceToQueen=0):(this._directionToQueen={x:o/s,y:e/s},this._distanceToQueen=s)}leavePheromone(t){this._pheromoneLevel=t,this._hasPheromone=!0}clearPheromone(){this._pheromoneLevel=0,this._hasPheromone=!1}move(t,i){this.isAlive()&&(this.x=t,this.y=i,this._stepsWithoutFood++)}isAlive(){return this._stepsWithoutFood<this._maxStepsWithoutFood}tick(){this.isAlive()&&(this._hasPheromone&&(this._pheromoneLevel=Math.max(0,this._pheromoneLevel-.1),this._pheromoneLevel===0&&(this._hasPheromone=!1)),this._stepsWithoutFood++)}die(){this._stepsWithoutFood=this._maxStepsWithoutFood}drawAnt(t){super.draw(t);const i=this._x+this.size/2,o=this._y+this.size/2,e=this.size/3;t.beginPath(),t.arc(i,o,e,0,Math.PI*2),t.fillStyle="red",t.fill(),t.strokeStyle="darkpurple",t.stroke()}}class g extends l{constructor(t,i,o,e,s,n){super(t,i,o,e,s),this._foodCount=0,this._maxFoodCount=10,this.agent="queen",this._color="purple",this._foodCount=n}tick(){this.isAlive()&&(this._foodCount=Math.max(0,this._foodCount-1))}createAnt(t,i,o,e){return t&&Math.random()<i?new u(this._x,this._y,this.size,this.i,this.j,e):!t&&Math.random()<o?new u(this._x,this._y,this.size,this.i,this.j,e):null}isAlive(){return this._foodCount<this._maxFoodCount}drawQueen(t){super.draw(t);const i=this._x+this.size/2,o=this._y+this.size/2,e=this.size/3;t.beginPath(),t.arc(i,o,e,0,Math.PI*2),t.fillStyle="purple",t.fill(),t.strokeStyle="darkpurple",t.stroke();const s=this._foodCount/this._maxFoodCount,n=4,h=this.size*.8,a=this._x+this.size*.1,d=this._y+this.size-n-2;t.fillStyle="rgba(255, 255, 255, 0.5)",t.fillRect(a,d,h,n),t.fillStyle=`rgba(255, 0, 0, ${s})`,t.fillRect(a,d,h*s,n)}}class m{constructor(t){this._board=[],this._rows=100,this._cols=100,this._cellSize=70,this.queensCount=t.queensCount,this.createAntWithFoodProbability=t.createAntWithFoodProbability,this.createAntWithoutFoodProbability=t.createAntWithoutFoodProbability,this.goodsCount=t.goodsCount,this.queenDeathSteps=t.queenDeathSteps,this.antDeathSteps=t.antDeathSteps,this._canvas=t.canvas,this._ctx=this._canvas.getContext("2d")}init({size:t}){this._updateBoardSize(t),this._canvas.width=this._rows*this._cellSize,this._canvas.height=this._cols*this._cellSize,this._fillBoard(),this._drawBoard(),this.createInitialEntities(this.queensCount,"queen"),this.createInitialEntities(this.goodsCount,"good")}get board(){return this._board}createInitialEntities(t,i){const o=[];for(let e=0;e<t;e++){let s,n;do s=Math.floor(Math.random()*this._rows),n=Math.floor(Math.random()*this._cols);while(o.find(h=>h.i===s&&h.j===n));if(this._board[s][n].agent!==null){e--;continue}o.push(this._board[s][n])}o.forEach(e=>{let s;i==="queen"?(s=new g(e.x,e.y,this._cellSize,e.i,e.j,this.queenDeathSteps),s.drawQueen(this._ctx)):(s=new f(e.x,e.y,this._cellSize,e.i,e.j),s.drawGood(this._ctx)),this._board[e.i][e.j]=s})}step(){this._board.forEach(t=>{t.forEach(i=>{i.agent==="good"&&(i.itemsCount<10&&i.incrementItemsCount(),i.drawGood(this._ctx))})})}_updateBoardSize(t){this._rows=t.n,this._cols=t.m}_fillBoard(){for(let t=0;t<this._rows;t++){this._board[t]=[];for(let i=0;i<this._cols;i++)this._board[t][i]=new l(i*this._cellSize,t*this._cellSize,this._cellSize,t,i)}}_drawBoard(){this._ctx.beginPath();for(let t=0;t<this._board.length;t++)for(let i=0;i<this._board[t].length;i++)this._board[t][i].draw(this._ctx)}tick(){for(let t=0;t<this._rows;t++)for(let i=0;i<this._cols;i++){const o=this._board[t][i];if(o.agent==="queen"){const e=o;e.tick();const s=this.checkNearbyFood(t,i),n=e.createAnt(s,this.createAntWithFoodProbability,this.createAntWithoutFoodProbability,this.antDeathSteps);if(n){const h=this.getEmptyNeighbors(t,i);if(h.length>0){const a=h[Math.floor(Math.random()*h.length)];this._board[a.y][a.x]=n,n.drawAnt(this._ctx)}}}o.agent==="ant"&&o.tick()}console.log(this._board)}getEmptyNeighbors(t,i){const o=[];for(let e=-1;e<=1;e++)for(let s=-1;s<=1;s++){if(e===0&&s===0)continue;const n=t+e,h=i+s;n>=0&&n<this._rows&&h>=0&&h<this._cols&&this._board[n][h].agent===null&&o.push({x:h,y:n})}return o}checkNearbyFood(t,i){for(let o=-1;o<=1;o++)for(let e=-1;e<=1;e++){if(o===0&&e===0)continue;const s=t+o,n=i+e;if(s>=0&&s<this._rows&&n>=0&&n<this._cols&&this._board[s][n].agent==="food")return!0}return!1}}const p=({initial:r,onChange:t})=>{let i=r.n,o=r.m;const e=document.createElement("div"),s=document.createElement("input");s.type="number",s.value=i.toString(),s.addEventListener("change",()=>{i=parseInt(s.value)}),e.appendChild(s);const n=document.createElement("input");n.type="number",n.value=o.toString(),n.addEventListener("change",()=>{o=parseInt(n.value)}),e.appendChild(n);const h=document.createElement("button");return h.textContent="Apply size",e.appendChild(h),h.addEventListener("click",()=>{t({n:i,m:o})}),e},_={n:10,m:10};class y{constructor(t){this.isRunning=!1,this.tickInterval=1e3,this.intervalId=null,this.gameSettings={queensCount:5,createAntWithFoodProbability:.5,createAntWithoutFoodProbability:.5,goodsCount:5,queenDeathSteps:3,antDeathSteps:3},this.container=t;const i=document.createElement("canvas");this.container.appendChild(i),this.board=new m({canvas:i,...this.gameSettings})}start(){if(this.isRunning)return;this.board.init({size:_});const t=p({initial:_,onChange:i=>this.board.init({size:i})});this.container.prepend(t),this.isRunning=!0,this.intervalId=setInterval(()=>{this.tick()},this.tickInterval)}stop(){this.isRunning&&(this.isRunning=!1,this.intervalId!==null&&(clearInterval(this.intervalId),this.intervalId=null))}tick(){this.board.tick(),this.board.step()}setTickInterval(t){this.tickInterval=t,this.isRunning&&(this.stop(),this.start())}get running(){return this.isRunning}}const c=document.getElementById("app");c&&new y(c).start();
